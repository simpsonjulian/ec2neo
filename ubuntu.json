{
  "Description": "Neo4j on AWS - creates an EC2 machine, EBS volume, static IP address, and deploys the Neo4j Graph Database on it",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Mappings" : {

    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "64" : "ami-0568456c" },
      "us-west-2"      : { "64" : "ami-927613a2" },
      "us-west-1"      : { "64" : "ami-c08dbc85" },
      "eu-west-1"      : { "64" : "ami-66ef0111" },
      "ap-southeast-1" : { "64" : "ami-f094c0a2" },
      "ap-southeast-2" : { "64" : "ami-978916ad" },
      "ap-northeast-1" : { "64" : "ami-8f78188e" },
      "sa-east-1"      : { "64" : "ami-25b01138" }
    }

  },

    
    "Parameters": {
      "InstanceType" : {
        "Description" : "EC2 instance type",
        "Type" : "String",
        "Default" : "m1.small",
        "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge"],
        "ConstraintDescription" : "must be a valid EC2 instance type."
      },

      "SSHKeyName": {
         "Description" : "Name of the SSH key that you will use to access the server (must be on AWS Availability Zone already)",
         "Type" : "String",
         "Default": "NEO4J"
      },

      "NetworkWhitelist" : {
        "Description" : " The IP address range that can be used to connect to the Neo4j server (by REST or SSH)",
        "Type": "String",
        "MinLength": "9",
        "MaxLength": "18",
        "Default": "0.0.0.0/0",
        "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
        "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
      } 
    },
    "Resources": {
        "ElasticIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "InstanceId": {
                    "Ref": "Server"
                }
            }
        },
        "Server": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "AvailabilityZone": { "Fn::Select" : [ 0, { "Fn::GetAZs" : "" }] },
                "DisableApiTermination": "FALSE",
                "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, "64"] },
                "InstanceType": { "Ref" : "InstanceType" },
                "KeyName": {"Ref": "SSHKeyName"},
                "Monitoring": "false",
                "SecurityGroups": [
                    {
                        "Ref": "sgNeo4jServer"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Neo4j on AWS"
                    }
                ],
                "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
                        "#!/bin/bash -v\n",
                        "# Make the filesystem for the database\n",
                        "mkdir -p /var/lib/neo4j\n",
                        "mkfs.ext4 /dev/xvdj\n",
                        "mount /dev/xvdj /var/lib/neo4j\n",
                        "# install the packages \n",
                        "wget -O - http://debian.neo4j.org/neotechnology.gpg.key| apt-key add -\n",
                        "echo 'deb http://debian.neo4j.org/repo stable/' > /etc/apt/sources.list.d/neo4j.list\n",
                        "aptitude update -y\n",
                        "aptitude install -y neo4j\n",
                        "# tweak the config\n",
                        "sed -i 's/^#\\(org.neo4j.server.webserver.address\\)/\\1/' /etc/neo4j/neo4j-server.properties\n",
                        "service neo4j-service restart\n"
                ]]}},
                "Volumes" : [
                          { "VolumeId" : { "Ref" : "EBSVolume" },
                            "Device" : "/dev/sdj"
                }]

            }
        },
        "EBSVolume": {
            "Type": "AWS::EC2::Volume",
            "Properties": {
                "AvailabilityZone": { "Fn::Select" : [ 0, { "Fn::GetAZs" : "" }] },
                "Size": "100"
            }
        },
        "sgNeo4jServer": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Neo4j Ports",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": { "Ref": "NetworkWhitelist" }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "7474",
                        "ToPort": "7474",
                        "CidrIp": { "Ref": "NetworkWhitelist" }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "Neo4jWebadmin" : {
            "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "Server", "PublicIp" ]}, ":7474"]] },
            "Description" : "This is the address of your Neo4j server web administration console."
          },
        "Neo4jEndPoint" : {
            "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "Server", "PublicIp" ]}, ":7474/db/data"]] },
            "Description" : "This is the address of your Neo4j server, that your application will use."
          },
        "SshAccess": {
            "Value" : {"Fn::Join" : ["", ["ssh -i ", {"Ref": "SSHKeyName"}, ".pem -l ubuntu ", { "Fn::GetAtt" : [ "Server", "PublicIp" ]}]]},
            "Description" : "This is how you gain remote access to the machine."
        },
        "Note" :{
            "Value" : "It takes up to 5 minutes for your EC2 machine to finish booting and start Neo4j.  Coffee time?",
            "Description" : ""
        }
    }

}
